// <auto-generated />
using System;
using DATN.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DATN.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210601074032_fix-key")]
    partial class fixkey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DATN.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("DATN.Entities.BoPhan", b =>
                {
                    b.Property<string>("MaBoPhan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenBoPhan")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("MaBoPhan");

                    b.ToTable("BoPhans");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietBanGiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.Property<string>("SoPhieuBanGiao")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaThucPham");

                    b.HasIndex("SoPhieuBanGiao");

                    b.ToTable("ChiTietBanGiaos");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietCungCap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaNhaCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.Property<string>("SoPhieuCugCap")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaThucPham");

                    b.HasIndex("SoPhieuCugCap");

                    b.ToTable("ChiTietCungCaps");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietGiao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MaNhaCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.Property<string>("SoPhieuGiao")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaThucPham");

                    b.HasIndex("SoPhieuGiao");

                    b.ToTable("ChiTietGiaos");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietKiemKe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChatLuong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.Property<string>("SoPhieuKiemKe")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("MaThucPham");

                    b.HasIndex("SoPhieuKiemKe");

                    b.ToTable("ChiTietKiemKes");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietYeuCau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.Property<string>("SoPhieuYeuCau")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MaThucPham");

                    b.HasIndex("SoPhieuYeuCau");

                    b.ToTable("ChiTietYeuCaus");
                });

            modelBuilder.Entity("DATN.Entities.Class", b =>
                {
                    b.Property<string>("MaLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<string>("TenLop")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("MaLop");

                    b.ToTable("Classes");
                });

            modelBuilder.Entity("DATN.Entities.DinhLuongMonAn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("SoLuong")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("MaMonAn");

                    b.HasIndex("MaThucPham");

                    b.ToTable("DinhLuongMonAns");
                });

            modelBuilder.Entity("DATN.Entities.GiaoVien", b =>
                {
                    b.Property<string>("MaGV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayVao")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrinhDo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MaGV");

                    b.HasIndex("MaLop")
                        .IsUnique()
                        .HasFilter("[MaLop] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("GiaoViens");
                });

            modelBuilder.Entity("DATN.Entities.HocSinh", b =>
                {
                    b.Property<int>("Idhs")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.HasKey("Idhs");

                    b.HasIndex("MaLop");

                    b.ToTable("HocSinhs");
                });

            modelBuilder.Entity("DATN.Entities.MonAn", b =>
                {
                    b.Property<string>("MaMonAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BuaAn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenMonAn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaMonAn");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("MonAns");
                });

            modelBuilder.Entity("DATN.Entities.NhaCungCap", b =>
                {
                    b.Property<string>("MaNhaCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenNhaCungCap")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaNhaCungCap");

                    b.ToTable("NhaCungCaps");
                });

            modelBuilder.Entity("DATN.Entities.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaBoPhan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MaNhanVien");

                    b.HasIndex("MaBoPhan");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("DATN.Entities.PhieuAn", b =>
                {
                    b.Property<string>("SophieuAn")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaGV")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("SophieuAn");

                    b.HasIndex("MaGV");

                    b.ToTable("PhieuAns");
                });

            modelBuilder.Entity("DATN.Entities.PhieuBanGiao", b =>
                {
                    b.Property<string>("SoPhieuBanGiao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoPhieuYeuCau")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SoPhieuBanGiao");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("SoPhieuYeuCau")
                        .IsUnique()
                        .HasFilter("[SoPhieuYeuCau] IS NOT NULL");

                    b.ToTable("PhieuBanGiaos");
                });

            modelBuilder.Entity("DATN.Entities.PhieuCungCap", b =>
                {
                    b.Property<string>("SoPhieuCugCap")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("SoPhieuCugCap");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuCungCaps");
                });

            modelBuilder.Entity("DATN.Entities.PhieuGiao", b =>
                {
                    b.Property<string>("SoPhieuGiao")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoPhieuCungCap")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SoPhieuGiao");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("SoPhieuCungCap")
                        .IsUnique()
                        .HasFilter("[SoPhieuCungCap] IS NOT NULL");

                    b.ToTable("PhieuGiaos");
                });

            modelBuilder.Entity("DATN.Entities.PhieuKiemKe", b =>
                {
                    b.Property<string>("SoPhieuKiemKe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.HasKey("SoPhieuKiemKe");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuKiemKes");
                });

            modelBuilder.Entity("DATN.Entities.PhieuYeuCau", b =>
                {
                    b.Property<string>("SoPhieuYeuCau")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("GhiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MaNhanVien")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("SoPhieuYeuCau");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhieuYeuCaus");
                });

            modelBuilder.Entity("DATN.Entities.ThucPham", b =>
                {
                    b.Property<string>("MaThucPham")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DonVi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenThucPham")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaThucPham");

                    b.ToTable("ThucPhams");
                });

            modelBuilder.Entity("DATN.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<bool>("GioiTinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DATN.Entities.Admin", b =>
                {
                    b.HasOne("DATN.Entities.User", "User")
                        .WithOne("Admin")
                        .HasForeignKey("DATN.Entities.Admin", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DATN.Entities.ChiTietBanGiao", b =>
                {
                    b.HasOne("DATN.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietBanGiaos")
                        .HasForeignKey("MaThucPham");

                    b.HasOne("DATN.Entities.PhieuBanGiao", "PhieuBanGiao")
                        .WithMany("ChiTietBanGiaos")
                        .HasForeignKey("SoPhieuBanGiao");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietCungCap", b =>
                {
                    b.HasOne("DATN.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("ChiTietCungCaps")
                        .HasForeignKey("MaNhaCungCap");

                    b.HasOne("DATN.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietCungCaps")
                        .HasForeignKey("MaThucPham");

                    b.HasOne("DATN.Entities.PhieuCungCap", "PhieuCungCap")
                        .WithMany("ChiTietCungCaps")
                        .HasForeignKey("SoPhieuCugCap");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietGiao", b =>
                {
                    b.HasOne("DATN.Entities.NhaCungCap", "NhaCungCap")
                        .WithMany("ChiTietGiaos")
                        .HasForeignKey("MaNhaCungCap");

                    b.HasOne("DATN.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietGiaos")
                        .HasForeignKey("MaThucPham");

                    b.HasOne("DATN.Entities.PhieuGiao", "PhieuGiao")
                        .WithMany("ChiTietGiaos")
                        .HasForeignKey("SoPhieuGiao");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietKiemKe", b =>
                {
                    b.HasOne("DATN.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietKiemKes")
                        .HasForeignKey("MaThucPham");

                    b.HasOne("DATN.Entities.PhieuKiemKe", "PhieuKiemKe")
                        .WithMany("ChiTietKiemKes")
                        .HasForeignKey("SoPhieuKiemKe");
                });

            modelBuilder.Entity("DATN.Entities.ChiTietYeuCau", b =>
                {
                    b.HasOne("DATN.Entities.ThucPham", "ThucPham")
                        .WithMany("ChiTietYeuCaus")
                        .HasForeignKey("MaThucPham");

                    b.HasOne("DATN.Entities.PhieuYeuCau", "PhieuYeuCau")
                        .WithMany("ChiTietYeuCaus")
                        .HasForeignKey("SoPhieuYeuCau");
                });

            modelBuilder.Entity("DATN.Entities.DinhLuongMonAn", b =>
                {
                    b.HasOne("DATN.Entities.MonAn", "MonAn")
                        .WithMany("DinhLuongMonAns")
                        .HasForeignKey("MaMonAn");

                    b.HasOne("DATN.Entities.ThucPham", "ThucPham")
                        .WithMany("DinhLuongMonAns")
                        .HasForeignKey("MaThucPham");
                });

            modelBuilder.Entity("DATN.Entities.GiaoVien", b =>
                {
                    b.HasOne("DATN.Entities.Class", "Class")
                        .WithOne("GiaoVien")
                        .HasForeignKey("DATN.Entities.GiaoVien", "MaLop");

                    b.HasOne("DATN.Entities.User", "User")
                        .WithOne("GiaoVien")
                        .HasForeignKey("DATN.Entities.GiaoVien", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DATN.Entities.HocSinh", b =>
                {
                    b.HasOne("DATN.Entities.Class", "Class")
                        .WithMany("HocSinhs")
                        .HasForeignKey("MaLop");
                });

            modelBuilder.Entity("DATN.Entities.MonAn", b =>
                {
                    b.HasOne("DATN.Entities.NhanVien", "NhanVien")
                        .WithMany("MonAns")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("DATN.Entities.NhanVien", b =>
                {
                    b.HasOne("DATN.Entities.BoPhan", "BoPhan")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaBoPhan");

                    b.HasOne("DATN.Entities.User", "User")
                        .WithOne("NhanVien")
                        .HasForeignKey("DATN.Entities.NhanVien", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DATN.Entities.PhieuAn", b =>
                {
                    b.HasOne("DATN.Entities.GiaoVien", "GiaoVien")
                        .WithMany("PhieuAns")
                        .HasForeignKey("MaGV");
                });

            modelBuilder.Entity("DATN.Entities.PhieuBanGiao", b =>
                {
                    b.HasOne("DATN.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuBanGiaos")
                        .HasForeignKey("MaNhanVien");

                    b.HasOne("DATN.Entities.PhieuYeuCau", "PhieuYeuCau")
                        .WithOne("PhieuBanGiao")
                        .HasForeignKey("DATN.Entities.PhieuBanGiao", "SoPhieuYeuCau");
                });

            modelBuilder.Entity("DATN.Entities.PhieuCungCap", b =>
                {
                    b.HasOne("DATN.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuCungCaps")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("DATN.Entities.PhieuGiao", b =>
                {
                    b.HasOne("DATN.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuGiaos")
                        .HasForeignKey("MaNhanVien");

                    b.HasOne("DATN.Entities.PhieuCungCap", "PhieuCungCap")
                        .WithOne("PhieuGiao")
                        .HasForeignKey("DATN.Entities.PhieuGiao", "SoPhieuCungCap");
                });

            modelBuilder.Entity("DATN.Entities.PhieuKiemKe", b =>
                {
                    b.HasOne("DATN.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuKiemKes")
                        .HasForeignKey("MaNhanVien");
                });

            modelBuilder.Entity("DATN.Entities.PhieuYeuCau", b =>
                {
                    b.HasOne("DATN.Entities.NhanVien", "NhanVien")
                        .WithMany("PhieuYeuCaus")
                        .HasForeignKey("MaNhanVien");
                });
#pragma warning restore 612, 618
        }
    }
}
